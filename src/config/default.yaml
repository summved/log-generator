generators:
  endpoint:
    enabled: true
    frequency: 10000
    templates:
      - level: INFO
        messageTemplate: "HTTP {method} {path} - {status} {responseTime}ms - IP: {clientIP}"
        probability: 0.6
        metadata:
          component: api-gateway
      - level: ERROR
        messageTemplate: "HTTP {method} {path} - {status} {errorMessage} - IP: {clientIP}"
        probability: 0.1
        metadata:
          component: api-gateway
      - level: WARN
        messageTemplate: Rate limit exceeded for IP {clientIP} - {path}
        probability: 0.05
        metadata:
          component: rate-limiter
      - level: DEBUG
        messageTemplate: "Request headers: {headers} - {path}"
        probability: 0.25
        metadata:
          component: api-gateway
  application:
    enabled: true
    frequency: 15
    templates:
      - level: INFO
        messageTemplate: User {userId} performed action {action} on resource {resourceId}
        probability: 0.5
        metadata:
          component: business-logic
      - level: ERROR
        messageTemplate: "Database connection failed: {errorMessage}"
        probability: 0.08
        metadata:
          component: database
      - level: WARN
        messageTemplate: "High memory usage detected: {memoryUsage}% - PID: {pid}"
        probability: 0.12
        metadata:
          component: monitoring
      - level: INFO
        messageTemplate: Cache {cacheOperation} for key {key} - {result}
        probability: 0.3
        metadata:
          component: cache
  server:
    enabled: true
    frequency: 8
    templates:
      - level: INFO
        messageTemplate: "System load: {loadAverage} - CPU: {cpuUsage}% Memory: {memoryUsage}%"
        probability: 0.4
        metadata:
          component: system-monitor
      - level: ERROR
        messageTemplate: "Disk space critical on {mountPoint}: {freeSpace}GB remaining"
        probability: 0.05
        metadata:
          component: disk-monitor
      - level: WARN
        messageTemplate: "High CPU usage detected: {cpuUsage}% for {duration}s"
        probability: 0.15
        metadata:
          component: performance-monitor
      - level: INFO
        messageTemplate: "Service {serviceName} {action} - PID: {pid}"
        probability: 0.4
        metadata:
          component: service-manager
  firewall:
    enabled: true
    frequency: 20
    templates:
      - level: INFO
        messageTemplate: "ACCEPT {protocol} {srcIP}:{srcPort} -> {dstIP}:{dstPort} -
          Rule: {ruleId}"
        probability: 0.7
        metadata:
          component: packet-filter
      - level: WARN
        messageTemplate: "DROP {protocol} {srcIP}:{srcPort} -> {dstIP}:{dstPort} - Rule:
          {ruleId} - Reason: {reason}"
        probability: 0.25
        metadata:
          component: packet-filter
        mitre:
          technique: T1562.004
          tactic: TA0005
          subtechnique: Disable or Modify System Firewall
          description: Adversaries may disable or modify system firewalls
      - level: ERROR
        messageTemplate: "INTRUSION DETECTED: {attackType} from {srcIP} - Blocked by
          rule {ruleId}"
        probability: 0.03
        metadata:
          component: intrusion-detection
        mitre:
          technique: T1562.001
          tactic: TA0005
          subtechnique: Disable or Modify Tools
          description: Adversaries may disable security tools to avoid detection
      - level: DEBUG
        messageTemplate: "Connection state: {state} {srcIP}:{srcPort} <-> {dstIP}:{dstPort}"
        probability: 0.02
        metadata:
          component: connection-tracker
  cloud:
    enabled: true
    frequency: 12
    templates:
      - level: INFO
        messageTemplate: "AWS {service} API call: {awsOperation} by {user} - RequestId:
          {requestId}"
        probability: 0.5
        metadata:
          component: aws-cloudtrail
      - level: WARN
        messageTemplate: "Auto-scaling triggered: {action} instance {instanceId} in {region}"
        probability: 0.2
        metadata:
          component: aws-autoscaling
      - level: ERROR
        messageTemplate: "S3 bucket {bucketName} access denied for {user} - Action: {action}"
        probability: 0.1
        metadata:
          component: aws-s3
      - level: INFO
        messageTemplate: "Lambda function {functionName} executed - Duration:
          {duration}ms Memory: {memoryUsed}MB"
        probability: 0.2
        metadata:
          component: aws-lambda
  authentication:
    enabled: true
    frequency: 25
    templates:
      - level: INFO
        messageTemplate: "User {username} login successful from {clientIP} - Session:
          {sessionId}"
        probability: 0.6
        metadata:
          component: auth-service
      - level: WARN
        messageTemplate: "Failed login attempt for {username} from {clientIP} -
          Attempts: {attemptCount}"
        probability: 0.2
        metadata:
          component: auth-service
        mitre:
          technique: T1110.001
          tactic: TA0006
          subtechnique: Password Guessing
          description: Adversaries may use password guessing to gain access
      - level: ERROR
        messageTemplate: Account {username} locked due to multiple failed attempts from
          {clientIP}
        probability: 0.05
        metadata:
          component: auth-service
        mitre:
          technique: T1110
          tactic: TA0006
          subtechnique: Brute Force
          description: Account lockout due to multiple failed attempts
      - level: INFO
        messageTemplate: Password changed for user {username} from {clientIP}
        probability: 0.05
        metadata:
          component: auth-service
        mitre:
          technique: T1098
          tactic: TA0003
          subtechnique: Account Manipulation
          description: Adversaries may manipulate accounts to maintain access
      - level: WARN
        messageTemplate: "Suspicious login: {username} from unusual location {location}
          ({clientIP})"
        probability: 0.08
        metadata:
          component: security-monitor
        mitre:
          technique: T1078
          tactic: TA0001
          subtechnique: Valid Accounts
          description: Login from unusual geographic location
      - level: INFO
        messageTemplate: "User {username} logout - Session duration: {duration}min"
        probability: 0.02
        metadata:
          component: auth-service
  database:
    enabled: true
    frequency: 30
    templates:
      - level: INFO
        messageTemplate: "Query executed: {queryType} on table {tableName} - Duration:
          {duration}ms"
        probability: 0.5
        metadata:
          component: query-engine
      - level: WARN
        messageTemplate: "Slow query detected: {query} - Duration: {duration}ms
          (threshold: 1000ms)"
        probability: 0.15
        metadata:
          component: performance-monitor
      - level: ERROR
        messageTemplate: "Database connection failed: {errorMessage} - Pool: {poolName}"
        probability: 0.05
        metadata:
          component: connection-pool
      - level: INFO
        messageTemplate: "Transaction {transactionId} committed - Tables: {tableCount}"
        probability: 0.2
        metadata:
          component: transaction-manager
      - level: ERROR
        messageTemplate: "Deadlock detected: Transaction {transactionId} rolled back"
        probability: 0.02
        metadata:
          component: deadlock-detector
      - level: WARN
        messageTemplate: "High connection count: {connectionCount}/{maxConnections} -
          Database: {dbName}"
        probability: 0.08
        metadata:
          component: connection-monitor
  webserver:
    enabled: true
    frequency: 40
    templates:
      - level: INFO
        messageTemplate: '{clientIP} - {method} {path} {status} {responseSize} "{userAgent}"'
        probability: 0.6
        metadata:
          component: access-log
      - level: WARN
        messageTemplate: "Rate limiting activated for {clientIP} - Requests: {requestCount}/min"
        probability: 0.1
        metadata:
          component: rate-limiter
      - level: ERROR
        messageTemplate: "Backend server {backendHost} unreachable - Error: {errorCode}"
        probability: 0.05
        metadata:
          component: load-balancer
      - level: INFO
        messageTemplate: SSL certificate {certName} expires in {daysToExpiry} days
        probability: 0.02
        metadata:
          component: ssl-monitor
      - level: WARN
        messageTemplate: "Large response detected: {responseSize}MB for {path} - Client:
          {clientIP}"
        probability: 0.08
        metadata:
          component: performance-monitor
      - level: ERROR
        messageTemplate: "Request timeout: {path} exceeded {timeout}s - Client: {clientIP}"
        probability: 0.15
        metadata:
          component: timeout-monitor
  email:
    enabled: true
    frequency: 15
    templates:
      - level: INFO
        messageTemplate: "Email sent: From {sender} to {recipient} - Subject: {subject}
          - MessageId: {messageId}"
        probability: 0.5
        metadata:
          component: smtp-server
      - level: WARN
        messageTemplate: "Email delivery delayed: {messageId} to {recipient} - Retry
          attempt {retryCount}"
        probability: 0.2
        metadata:
          component: delivery-queue
      - level: ERROR
        messageTemplate: "Email delivery failed: {messageId} to {recipient} - Error:
          {errorMessage}"
        probability: 0.1
        metadata:
          component: delivery-engine
      - level: WARN
        messageTemplate: "Spam detected: From {sender} to {recipient} - Score: {spamScore}"
        probability: 0.15
        metadata:
          component: spam-filter
      - level: ERROR
        messageTemplate: "Email quota exceeded: {sender} - Limit: {quotaLimit}MB"
        probability: 0.05
        metadata:
          component: quota-manager
  backup:
    enabled: true
    frequency: 8
    templates:
      - level: INFO
        messageTemplate: "Backup completed: {backupName} - Size: {backupSize}GB -
          Duration: {duration}min"
        probability: 0.4
        metadata:
          component: backup-engine
      - level: WARN
        messageTemplate: "Backup size increased: {backupName} - Current: {currentSize}GB
          - Previous: {previousSize}GB"
        probability: 0.2
        metadata:
          component: size-monitor
      - level: ERROR
        messageTemplate: "Backup failed: {backupName} - Error: {errorMessage}"
        probability: 0.1
        metadata:
          component: backup-engine
      - level: INFO
        messageTemplate: "Backup retention cleanup: Removed {deletedCount} old backups"
        probability: 0.15
        metadata:
          component: cleanup-service
      - level: WARN
        messageTemplate: "Storage space low: {availableSpace}GB remaining on {storagePath}"
        probability: 0.15
        metadata:
          component: storage-monitor
  microservices:
    enabled: true
    frequency: 35
    templates:
      - level: INFO
        messageTemplate: "Service {serviceName} called {targetService} - Method:
          {method} - Duration: {duration}ms"
        probability: 0.4
        metadata:
          component: service-mesh
      - level: WARN
        messageTemplate: "Circuit breaker opened for service {serviceName} - Failure
          rate: {failureRate}%"
        probability: 0.1
        metadata:
          component: circuit-breaker
      - level: ERROR
        messageTemplate: "Service {serviceName} health check failed - Endpoint:
          {healthEndpoint}"
        probability: 0.05
        metadata:
          component: health-monitor
      - level: INFO
        messageTemplate: "Service {serviceName} scaled: {oldInstances} -> {newInstances}
          instances"
        probability: 0.15
        metadata:
          component: auto-scaler
      - level: WARN
        messageTemplate: "High latency detected: {serviceName} -> {targetService} - {latency}ms"
        probability: 0.2
        metadata:
          component: latency-monitor
      - level: INFO
        messageTemplate: "Service discovery: {serviceName} registered at {serviceUrl}"
        probability: 0.1
        metadata:
          component: service-registry
  iot:
    enabled: true
    frequency: 20
    templates:
      - level: INFO
        messageTemplate: "Device {deviceId} connected - IP: {deviceIP} - Type: {deviceType}"
        probability: 0.3
        metadata:
          component: device-manager
      - level: WARN
        messageTemplate: "Device {deviceId} battery low: {batteryLevel}% - Location: {location}"
        probability: 0.2
        metadata:
          component: battery-monitor
      - level: ERROR
        messageTemplate: "Device {deviceId} offline - Last seen: {lastSeen}"
        probability: 0.1
        metadata:
          component: connectivity-monitor
      - level: INFO
        messageTemplate: "Sensor data: Device {deviceId} - Temperature: {temperature}°C
          - Humidity: {humidity}%"
        probability: 0.25
        metadata:
          component: sensor-collector
      - level: WARN
        messageTemplate: "Device {deviceId} firmware outdated - Current:
          {currentVersion} - Latest: {latestVersion}"
        probability: 0.15
        metadata:
          component: firmware-manager
replay:
  enabled: false
  speed: 1
  loop: false
  filters:
    sources: []
    levels: []
output:
  format: wazuh
  destination: file
  batching:
    maxBatchSize: 100
    flushIntervalMs: 1000
    enabled: true
  file:
    path: ./logs/current/logs.json
    rotation: true
    maxSize: 100MB
    maxFiles: 10
  syslog:
    host: localhost
    port: 514
    protocol: udp
  http:
    url: http://localhost:55000/api/events
    headers:
      Content-Type: application/json
      Authorization: Bearer your-token
storage:
  historicalPath: ./logs/historical
  currentPath: ./logs/current
  retention: 30
